# -*- coding: utf-8 -*-
"""RNN_practice.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1BqAcRBo5pKPPgBPDCFCxqel2OK_vXAqk
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

# %matplotlib inline

import keras
import tensorflow as tf
from tensorflow import keras
from keras.models import Sequential
from tensorflow.keras.layers import Input, Conv2D, Dense, Flatten, Dropout
from tensorflow.keras.models import Model
from tensorflow.keras.layers import GlobalMaxPooling2D, MaxPooling2D
from tensorflow.keras.layers import BatchNormalization
from tensorflow.keras import regularizers, optimizers
from tensorflow.keras.utils import to_categorical

#matrix
from sklearn.metrics import accuracy_score

#image dataset
from tensorflow.keras.datasets import cifar10

(X_train, y_train), (X_test, y_test) = cifar10.load_data()

plt.imshow(X_train[1])

plt.imshow(X_train[100])

#image is in form of numpy array min=0 , max = 255
X_train[1]

X_train = X_train/255
X_test = X_test/255

y_train_en = to_categorical(y_train,10)
y_test_en = to_categorical(y_test,10)

model = Sequential()
model.add(Conv2D(32,(4,4),input_shape=(32,32,3),activation='relu'))
model.add(MaxPooling2D(pool_size=(2,2)))
model.add(Conv2D(32,(4,4),input_shape=(32,32,3),activation='relu'))
model.add(MaxPooling2D(pool_size=(2,2)))

model.add(Flatten())

model.add(Dense(128,activation='relu'))
model.add(Dense(10,activation='softmax'))

model.compile(loss='categorical_crossentropy',optimizer='adam',metrics=['accuracy'])

model.summary()

history = model.fit(X_train,y_train_en,epochs=20,verbose=1, validation_data=(X_test,y_test_en))